Как пользоваться приложением
Запуск приложения:

Запустите приложение, используя следующую команду:

sh
python3 banking_microservices_security.py
Ввод команды:

Введите необходимую команду в текстовое поле и нажмите кнопку "Выполнить".

Процесс обучения бота
Подготовка данных для обучения:
Создайте CSV файл с данными для обучения. Файл должен содержать следующие колонки:
Port (номер порта)
Open (0 или 1, где 0 - закрыт, 1 - открыт)
Vulnerable (0 или 1, где 0 - нет уязвимости, 1 - есть уязвимость)
Пример данных в data.csv:

csv
Port,Open,Vulnerable
22,1,0
80,1,1
443,1,0
21,1,1
3306,0,0
3389,1,1

Обучение модели:
Запустите приложение и введите команду для обучения модели:

sh
train model data.csv
Ожидайте завершения процесса обучения. По окончании будет отображен отчет о классификации, и модель будет сохранена.

Использование обученной модели для предсказания:
Создайте CSV файл с новыми данными для предсказания. Файл должен содержать следующие колонки:
Port (номер порта)
Open (0 или 1, где 0 - закрыт, 1 - открыт)
Пример данных в new_data.csv:

csv
Port,Open
22,1
80,1
443,1
Запустите приложение и введите команду для предсказания:

sh
predict vulnerabilities new_data.csv

Получите результаты предсказания. Приложение покажет предсказания уязвимостей для введенных данных.
Инструкции по каждому инструменту

Использование обученной модели для предсказания
Создайте CSV-файл с новыми данными для предсказания.
Например, создайте файл new_data.csv с колонками:
Port (номер порта)
Open (0 или 1, где 0 - закрыт, 1 - открыт)
Пример данных в new_data.csv:

csv
Port,Open
22,1
80,1
443,1
Запустите приложение и введите команду для предсказания:

sh
python3 banking_microservices_security.py
В приложении введите команду:

sh
predict vulnerabilities new_data.csv
Получите результаты предсказания. Приложение покажет предсказания уязвимостей для введенных данных.


scan ports:
Описание: Сканирует указанные порты на указанном IP-адресе.
Команда: scan ports [IP] [порты]
Пример: scan ports 192.168.1.1 22,80,443
Результат: Отображает открытые порты для указанного IP.
check ip:
Описание: Проверяет доступность указанного IP-адреса.
Команда: check ip [IP]
Пример: check ip 8.8.8.8
Результат: Сообщает, доступен ли указанный IP-адрес.

analyze website:
Описание: Анализирует заголовки HTTP-ответа от указанного URL.
Команда: analyze website [URL]
Пример: analyze website http://example.com
Результат: Отображает заголовки HTTP-ответа для указанного URL.

nmap scan:
Описание: Использует Nmap для сканирования уязвимостей на указанном IP-адресе.
Команда: nmap scan [IP]
Пример: nmap scan 192.168.1.1
Результат: Отображает результаты сканирования Nmap для указанного IP.

openvas scan:
Описание: Использует OpenVAS для сканирования уязвимостей на указанном IP-адресе.
Команда: openvas scan [IP]
Пример: openvas scan 192.168.1.1
Результат: Отображает результаты сканирования OpenVAS для указанного IP.

train model:
Описание: Обучает модель на основе предоставленных данных.
Команда: train model [файл данных]
Пример: train model data.csv
Результат: Сообщает об успешном обучении модели и отображает отчет о классификации.

predict vulnerabilities:
Описание: Предсказывает уязвимости на основе обученной модели и новых данных.
Команда: predict vulnerabilities [файл данных]
Пример: predict vulnerabilities new_data.csv
Результат: Отображает предсказания уязвимостей для введенных данных.
